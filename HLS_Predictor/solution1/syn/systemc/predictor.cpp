// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.3
// Copyright (C) 1986-2016 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "predictor.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic predictor::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic predictor::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<25> predictor::ap_ST_fsm_state1 = "1";
const sc_lv<25> predictor::ap_ST_fsm_state2 = "10";
const sc_lv<25> predictor::ap_ST_fsm_state3 = "100";
const sc_lv<25> predictor::ap_ST_fsm_state4 = "1000";
const sc_lv<25> predictor::ap_ST_fsm_state5 = "10000";
const sc_lv<25> predictor::ap_ST_fsm_state6 = "100000";
const sc_lv<25> predictor::ap_ST_fsm_state7 = "1000000";
const sc_lv<25> predictor::ap_ST_fsm_state8 = "10000000";
const sc_lv<25> predictor::ap_ST_fsm_state9 = "100000000";
const sc_lv<25> predictor::ap_ST_fsm_state10 = "1000000000";
const sc_lv<25> predictor::ap_ST_fsm_state11 = "10000000000";
const sc_lv<25> predictor::ap_ST_fsm_state12 = "100000000000";
const sc_lv<25> predictor::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<25> predictor::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<32> predictor::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> predictor::ap_const_lv1_1 = "1";
const int predictor::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> predictor::ap_const_lv32_4 = "100";
const sc_lv<32> predictor::ap_const_lv32_10 = "10000";
const sc_lv<32> predictor::ap_const_lv32_5 = "101";
const sc_lv<32> predictor::ap_const_lv32_11 = "10001";
const sc_lv<32> predictor::ap_const_lv32_1 = "1";
const sc_lv<1> predictor::ap_const_lv1_0 = "0";
const sc_lv<32> predictor::ap_const_lv32_2 = "10";
const sc_lv<32> predictor::ap_const_lv32_3 = "11";
const sc_lv<32> predictor::ap_const_lv32_B = "1011";
const sc_lv<32> predictor::ap_const_lv32_D = "1101";
const sc_lv<32> predictor::ap_const_lv32_E = "1110";
const sc_lv<32> predictor::ap_const_lv32_F = "1111";
const sc_lv<32> predictor::ap_const_lv32_17 = "10111";
const sc_lv<6> predictor::ap_const_lv6_0 = "000000";
const sc_lv<32> predictor::ap_const_lv32_C = "1100";
const sc_lv<5> predictor::ap_const_lv5_0 = "00000";
const sc_lv<28> predictor::ap_const_lv28_0 = "0000000000000000000000000000";
const sc_lv<32> predictor::ap_const_lv32_18 = "11000";
const sc_lv<3> predictor::ap_const_lv3_0 = "000";
const sc_lv<4> predictor::ap_const_lv4_0 = "0000";
const sc_lv<4> predictor::ap_const_lv4_F = "1111";
const sc_lv<32> predictor::ap_const_lv32_100 = "100000000";
const sc_lv<32> predictor::ap_const_lv32_6 = "110";
const sc_lv<32> predictor::ap_const_lv32_12 = "10010";
const sc_lv<32> predictor::ap_const_lv32_8 = "1000";
const sc_lv<32> predictor::ap_const_lv32_1F = "11111";
const sc_lv<6> predictor::ap_const_lv6_20 = "100000";
const sc_lv<6> predictor::ap_const_lv6_1 = "1";
const sc_lv<9> predictor::ap_const_lv9_F = "1111";
const sc_lv<2> predictor::ap_const_lv2_2 = "10";
const sc_lv<5> predictor::ap_const_lv5_10 = "10000";
const sc_lv<5> predictor::ap_const_lv5_1 = "1";
const sc_lv<5> predictor::ap_const_lv5_F = "1111";
const sc_lv<15> predictor::ap_const_lv15_1000 = "1000000000000";
const sc_lv<2> predictor::ap_const_lv2_0 = "00";
const sc_lv<7> predictor::ap_const_lv7_3 = "11";
const sc_lv<3> predictor::ap_const_lv3_4 = "100";
const sc_lv<3> predictor::ap_const_lv3_1 = "1";
const sc_lv<4> predictor::ap_const_lv4_8 = "1000";
const sc_lv<3> predictor::ap_const_lv3_3 = "11";
const sc_lv<7> predictor::ap_const_lv7_40 = "1000000";

predictor::predictor(sc_module_name name) : sc_module(name), mVcdFile(0) {
    sigmoid_lut_U = new predictor_sigmoidbkb("sigmoid_lut_U");
    sigmoid_lut_U->clk(ap_clk);
    sigmoid_lut_U->reset(ap_rst_n_inv);
    sigmoid_lut_U->address0(sigmoid_lut_address0);
    sigmoid_lut_U->ce0(sigmoid_lut_ce0);
    sigmoid_lut_U->q0(sigmoid_lut_q0);
    predictor_BUS_CTRL_s_axi_U = new predictor_BUS_CTRL_s_axi<C_S_AXI_BUS_CTRL_ADDR_WIDTH,C_S_AXI_BUS_CTRL_DATA_WIDTH>("predictor_BUS_CTRL_s_axi_U");
    predictor_BUS_CTRL_s_axi_U->AWVALID(s_axi_BUS_CTRL_AWVALID);
    predictor_BUS_CTRL_s_axi_U->AWREADY(s_axi_BUS_CTRL_AWREADY);
    predictor_BUS_CTRL_s_axi_U->AWADDR(s_axi_BUS_CTRL_AWADDR);
    predictor_BUS_CTRL_s_axi_U->WVALID(s_axi_BUS_CTRL_WVALID);
    predictor_BUS_CTRL_s_axi_U->WREADY(s_axi_BUS_CTRL_WREADY);
    predictor_BUS_CTRL_s_axi_U->WDATA(s_axi_BUS_CTRL_WDATA);
    predictor_BUS_CTRL_s_axi_U->WSTRB(s_axi_BUS_CTRL_WSTRB);
    predictor_BUS_CTRL_s_axi_U->ARVALID(s_axi_BUS_CTRL_ARVALID);
    predictor_BUS_CTRL_s_axi_U->ARREADY(s_axi_BUS_CTRL_ARREADY);
    predictor_BUS_CTRL_s_axi_U->ARADDR(s_axi_BUS_CTRL_ARADDR);
    predictor_BUS_CTRL_s_axi_U->RVALID(s_axi_BUS_CTRL_RVALID);
    predictor_BUS_CTRL_s_axi_U->RREADY(s_axi_BUS_CTRL_RREADY);
    predictor_BUS_CTRL_s_axi_U->RDATA(s_axi_BUS_CTRL_RDATA);
    predictor_BUS_CTRL_s_axi_U->RRESP(s_axi_BUS_CTRL_RRESP);
    predictor_BUS_CTRL_s_axi_U->BVALID(s_axi_BUS_CTRL_BVALID);
    predictor_BUS_CTRL_s_axi_U->BREADY(s_axi_BUS_CTRL_BREADY);
    predictor_BUS_CTRL_s_axi_U->BRESP(s_axi_BUS_CTRL_BRESP);
    predictor_BUS_CTRL_s_axi_U->ACLK(ap_clk);
    predictor_BUS_CTRL_s_axi_U->ARESET(ap_rst_n_inv);
    predictor_BUS_CTRL_s_axi_U->ACLK_EN(ap_var_for_const0);
    predictor_BUS_CTRL_s_axi_U->ap_start(ap_start);
    predictor_BUS_CTRL_s_axi_U->interrupt(interrupt);
    predictor_BUS_CTRL_s_axi_U->ap_ready(ap_ready);
    predictor_BUS_CTRL_s_axi_U->ap_done(ap_done);
    predictor_BUS_CTRL_s_axi_U->ap_idle(ap_idle);
    predictor_mul_32scud_U0 = new predictor_mul_32scud<1,6,32,32,32>("predictor_mul_32scud_U0");
    predictor_mul_32scud_U0->clk(ap_clk);
    predictor_mul_32scud_U0->reset(ap_rst_n_inv);
    predictor_mul_32scud_U0->din0(reg_286);
    predictor_mul_32scud_U0->din1(reg_290);
    predictor_mul_32scud_U0->ce(ap_var_for_const0);
    predictor_mul_32scud_U0->dout(grp_fu_294_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state24);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond2_fu_481_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( exitcond2_fu_481_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bram_Addr_A);
    sensitive << ( bram_Addr_A_orig );

    SC_METHOD(thread_bram_Addr_A_orig);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( bram_addr_4_reg_698 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( tmp_7_fu_428_p2 );
    sensitive << ( bram_addr_6_reg_776 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_572_p2 );
    sensitive << ( tmp_s_fu_619_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( sum1_cast_fu_406_p1 );
    sensitive << ( sum3_cast_fu_458_p1 );
    sensitive << ( sum7_cast_fu_477_p1 );
    sensitive << ( sum9_cast_fu_597_p1 );
    sensitive << ( sum4_cast_fu_652_p1 );
    sensitive << ( sum8_cast_fu_675_p1 );

    SC_METHOD(thread_bram_Clk_A);
    sensitive << ( ap_clk );

    SC_METHOD(thread_bram_Din_A);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( tmp_7_fu_428_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_572_p2 );
    sensitive << ( tmp_s_fu_619_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( sigmoid_lut_load_cas_fu_472_p1 );
    sensitive << ( sigmoid_lut_load_1_c_fu_667_p1 );

    SC_METHOD(thread_bram_EN_A);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( tmp_7_fu_428_p2 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_572_p2 );
    sensitive << ( tmp_s_fu_619_p2 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_bram_Rst_A);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_bram_WEN_A);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( tmp_7_fu_428_p2 );
    sensitive << ( tmp_7_reg_734 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_572_p2 );
    sensitive << ( tmp_s_fu_619_p2 );
    sensitive << ( tmp_s_reg_812 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_exitcond1_fu_544_p2);
    sensitive << ( ap_CS_fsm_state15 );
    sensitive << ( j_1_reg_251 );

    SC_METHOD(thread_exitcond2_fu_481_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( i_1_reg_240 );

    SC_METHOD(thread_exitcond3_fu_389_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( k_reg_217 );

    SC_METHOD(thread_exitcond4_fu_357_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_exitcond5_fu_310_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_reg_194 );

    SC_METHOD(thread_exitcond_fu_572_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( k_1_reg_263 );

    SC_METHOD(thread_grp_fu_300_p4);
    sensitive << ( grp_fu_294_p2 );

    SC_METHOD(thread_i_2_fu_316_p2);
    sensitive << ( i_reg_194 );

    SC_METHOD(thread_i_3_fu_487_p2);
    sensitive << ( i_1_reg_240 );

    SC_METHOD(thread_j_2_fu_363_p2);
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_j_3_fu_550_p2);
    sensitive << ( j_1_reg_251 );

    SC_METHOD(thread_k_2_fu_395_p2);
    sensitive << ( k_reg_217 );

    SC_METHOD(thread_k_3_fu_578_p2);
    sensitive << ( k_1_reg_263 );

    SC_METHOD(thread_k_cast1_fu_385_p1);
    sensitive << ( k_reg_217 );

    SC_METHOD(thread_sigmoid_lut_address0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( tmp_11_cast_fu_440_p1 );
    sensitive << ( tmp_19_cast_fu_631_p1 );

    SC_METHOD(thread_sigmoid_lut_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_sigmoid_lut_load_1_c_fu_667_p1);
    sensitive << ( sigmoid_lut_q0 );

    SC_METHOD(thread_sigmoid_lut_load_cas_fu_472_p1);
    sensitive << ( sigmoid_lut_q0 );

    SC_METHOD(thread_sum1_cast_fu_406_p1);
    sensitive << ( sum1_fu_401_p2 );

    SC_METHOD(thread_sum1_fu_401_p2);
    sensitive << ( tmp_reg_688 );
    sensitive << ( k_cast1_fu_385_p1 );

    SC_METHOD(thread_sum2_fu_344_p3);
    sensitive << ( tmp_11_fu_338_p2 );

    SC_METHOD(thread_sum3_cast_fu_458_p1);
    sensitive << ( sum3_reg_729 );

    SC_METHOD(thread_sum3_fu_419_p2);
    sensitive << ( tmp_4_cast_reg_711 );
    sensitive << ( tmp1_fu_411_p3 );

    SC_METHOD(thread_sum4_cast1_fu_649_p1);
    sensitive << ( sum4_reg_807 );

    SC_METHOD(thread_sum4_cast_fu_652_p1);
    sensitive << ( sum4_cast1_fu_649_p1 );

    SC_METHOD(thread_sum4_fu_610_p2);
    sensitive << ( tmp_6_cast_cast_reg_789 );
    sensitive << ( tmp4_fu_602_p3 );

    SC_METHOD(thread_sum5_cast_fu_352_p1);
    sensitive << ( sum2_fu_344_p3 );

    SC_METHOD(thread_sum5_fu_527_p3);
    sensitive << ( tmp_15_fu_521_p2 );

    SC_METHOD(thread_sum6_cast1_fu_535_p1);
    sensitive << ( sum5_fu_527_p3 );

    SC_METHOD(thread_sum6_cast_fu_539_p1);
    sensitive << ( sum6_cast1_fu_535_p1 );

    SC_METHOD(thread_sum7_cast_fu_477_p1);
    sensitive << ( sum7_reg_743 );

    SC_METHOD(thread_sum7_fu_453_p2);
    sensitive << ( tmp_cast_reg_693 );
    sensitive << ( tmp2_fu_445_p3 );

    SC_METHOD(thread_sum8_cast1_fu_672_p1);
    sensitive << ( sum8_reg_821 );

    SC_METHOD(thread_sum8_cast_fu_675_p1);
    sensitive << ( sum8_cast1_fu_672_p1 );

    SC_METHOD(thread_sum8_fu_644_p2);
    sensitive << ( tmp_2_cast_cast_reg_771 );
    sensitive << ( tmp5_fu_636_p3 );

    SC_METHOD(thread_sum9_cast_fu_597_p1);
    sensitive << ( sum9_fu_592_p2 );

    SC_METHOD(thread_sum9_fu_592_p2);
    sensitive << ( tmp_1_cast_reg_766 );
    sensitive << ( tmp3_fu_584_p3 );

    SC_METHOD(thread_sum_2_fu_466_p2);
    sensitive << ( sum_reg_228 );
    sensitive << ( tmp_5_cast_fu_462_p1 );

    SC_METHOD(thread_sum_3_fu_661_p2);
    sensitive << ( sum_1_reg_274 );
    sensitive << ( tmp_18_cast_fu_657_p1 );

    SC_METHOD(thread_tmp1_fu_411_p3);
    sensitive << ( k_reg_217 );

    SC_METHOD(thread_tmp2_fu_445_p3);
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_tmp3_fu_584_p3);
    sensitive << ( k_1_reg_263 );

    SC_METHOD(thread_tmp4_fu_602_p3);
    sensitive << ( k_1_reg_263 );

    SC_METHOD(thread_tmp5_fu_636_p3);
    sensitive << ( j_1_reg_251 );

    SC_METHOD(thread_tmp_11_cast_fu_440_p1);
    sensitive << ( tmp_9_fu_434_p2 );

    SC_METHOD(thread_tmp_11_fu_338_p2);
    sensitive << ( tmp_fu_326_p3 );

    SC_METHOD(thread_tmp_13_fu_625_p2);
    sensitive << ( tmp_19_fu_615_p1 );

    SC_METHOD(thread_tmp_14_fu_493_p1);
    sensitive << ( i_1_reg_240 );

    SC_METHOD(thread_tmp_15_fu_521_p2);
    sensitive << ( tmp_2_fu_509_p3 );

    SC_METHOD(thread_tmp_16_fu_369_p1);
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_tmp_17_fu_556_p1);
    sensitive << ( j_1_reg_251 );

    SC_METHOD(thread_tmp_18_cast_fu_657_p1);
    sensitive << ( grp_fu_300_p4 );

    SC_METHOD(thread_tmp_18_fu_424_p1);
    sensitive << ( sum_reg_228 );

    SC_METHOD(thread_tmp_19_cast_fu_631_p1);
    sensitive << ( tmp_13_fu_625_p2 );

    SC_METHOD(thread_tmp_19_fu_615_p1);
    sensitive << ( sum_1_reg_274 );

    SC_METHOD(thread_tmp_1_cast_fu_505_p1);
    sensitive << ( tmp_1_fu_497_p3 );

    SC_METHOD(thread_tmp_1_fu_497_p3);
    sensitive << ( tmp_14_fu_493_p1 );

    SC_METHOD(thread_tmp_2_cast_cast_fu_517_p1);
    sensitive << ( tmp_2_fu_509_p3 );

    SC_METHOD(thread_tmp_2_fu_509_p3);
    sensitive << ( tmp_14_fu_493_p1 );

    SC_METHOD(thread_tmp_4_cast_fu_381_p1);
    sensitive << ( tmp_4_fu_373_p3 );

    SC_METHOD(thread_tmp_4_fu_373_p3);
    sensitive << ( tmp_16_fu_369_p1 );

    SC_METHOD(thread_tmp_5_cast_fu_462_p1);
    sensitive << ( grp_fu_300_p4 );

    SC_METHOD(thread_tmp_6_cast_cast_fu_568_p1);
    sensitive << ( tmp_6_fu_560_p3 );

    SC_METHOD(thread_tmp_6_fu_560_p3);
    sensitive << ( tmp_17_fu_556_p1 );

    SC_METHOD(thread_tmp_7_fu_428_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( j_reg_205 );

    SC_METHOD(thread_tmp_8_fu_322_p1);
    sensitive << ( i_reg_194 );

    SC_METHOD(thread_tmp_9_fu_434_p2);
    sensitive << ( tmp_18_fu_424_p1 );

    SC_METHOD(thread_tmp_cast_fu_334_p1);
    sensitive << ( tmp_fu_326_p3 );

    SC_METHOD(thread_tmp_fu_326_p3);
    sensitive << ( tmp_8_fu_322_p1 );

    SC_METHOD(thread_tmp_s_fu_619_p2);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( exitcond_fu_572_p2 );
    sensitive << ( j_1_reg_251 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( exitcond5_fu_310_p2 );
    sensitive << ( exitcond4_fu_357_p2 );
    sensitive << ( exitcond3_fu_389_p2 );
    sensitive << ( exitcond2_fu_481_p2 );
    sensitive << ( exitcond1_fu_544_p2 );
    sensitive << ( exitcond_fu_572_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "predictor_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, bram_Addr_A, "(port)bram_Addr_A");
    sc_trace(mVcdFile, bram_EN_A, "(port)bram_EN_A");
    sc_trace(mVcdFile, bram_WEN_A, "(port)bram_WEN_A");
    sc_trace(mVcdFile, bram_Din_A, "(port)bram_Din_A");
    sc_trace(mVcdFile, bram_Dout_A, "(port)bram_Dout_A");
    sc_trace(mVcdFile, bram_Clk_A, "(port)bram_Clk_A");
    sc_trace(mVcdFile, bram_Rst_A, "(port)bram_Rst_A");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_AWVALID, "(port)s_axi_BUS_CTRL_AWVALID");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_AWREADY, "(port)s_axi_BUS_CTRL_AWREADY");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_AWADDR, "(port)s_axi_BUS_CTRL_AWADDR");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_WVALID, "(port)s_axi_BUS_CTRL_WVALID");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_WREADY, "(port)s_axi_BUS_CTRL_WREADY");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_WDATA, "(port)s_axi_BUS_CTRL_WDATA");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_WSTRB, "(port)s_axi_BUS_CTRL_WSTRB");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_ARVALID, "(port)s_axi_BUS_CTRL_ARVALID");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_ARREADY, "(port)s_axi_BUS_CTRL_ARREADY");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_ARADDR, "(port)s_axi_BUS_CTRL_ARADDR");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_RVALID, "(port)s_axi_BUS_CTRL_RVALID");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_RREADY, "(port)s_axi_BUS_CTRL_RREADY");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_RDATA, "(port)s_axi_BUS_CTRL_RDATA");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_RRESP, "(port)s_axi_BUS_CTRL_RRESP");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_BVALID, "(port)s_axi_BUS_CTRL_BVALID");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_BREADY, "(port)s_axi_BUS_CTRL_BREADY");
    sc_trace(mVcdFile, s_axi_BUS_CTRL_BRESP, "(port)s_axi_BUS_CTRL_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, sigmoid_lut_address0, "sigmoid_lut_address0");
    sc_trace(mVcdFile, sigmoid_lut_ce0, "sigmoid_lut_ce0");
    sc_trace(mVcdFile, sigmoid_lut_q0, "sigmoid_lut_q0");
    sc_trace(mVcdFile, reg_286, "reg_286");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, reg_290, "reg_290");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, i_2_fu_316_p2, "i_2_fu_316_p2");
    sc_trace(mVcdFile, i_2_reg_683, "i_2_reg_683");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_326_p3, "tmp_fu_326_p3");
    sc_trace(mVcdFile, tmp_reg_688, "tmp_reg_688");
    sc_trace(mVcdFile, exitcond5_fu_310_p2, "exitcond5_fu_310_p2");
    sc_trace(mVcdFile, tmp_cast_fu_334_p1, "tmp_cast_fu_334_p1");
    sc_trace(mVcdFile, tmp_cast_reg_693, "tmp_cast_reg_693");
    sc_trace(mVcdFile, bram_addr_4_reg_698, "bram_addr_4_reg_698");
    sc_trace(mVcdFile, j_2_fu_363_p2, "j_2_fu_363_p2");
    sc_trace(mVcdFile, j_2_reg_706, "j_2_reg_706");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_4_cast_fu_381_p1, "tmp_4_cast_fu_381_p1");
    sc_trace(mVcdFile, tmp_4_cast_reg_711, "tmp_4_cast_reg_711");
    sc_trace(mVcdFile, exitcond4_fu_357_p2, "exitcond4_fu_357_p2");
    sc_trace(mVcdFile, k_2_fu_395_p2, "k_2_fu_395_p2");
    sc_trace(mVcdFile, k_2_reg_719, "k_2_reg_719");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, exitcond3_fu_389_p2, "exitcond3_fu_389_p2");
    sc_trace(mVcdFile, sum3_fu_419_p2, "sum3_fu_419_p2");
    sc_trace(mVcdFile, sum3_reg_729, "sum3_reg_729");
    sc_trace(mVcdFile, tmp_7_fu_428_p2, "tmp_7_fu_428_p2");
    sc_trace(mVcdFile, tmp_7_reg_734, "tmp_7_reg_734");
    sc_trace(mVcdFile, sum7_fu_453_p2, "sum7_fu_453_p2");
    sc_trace(mVcdFile, sum7_reg_743, "sum7_reg_743");
    sc_trace(mVcdFile, sum_2_fu_466_p2, "sum_2_fu_466_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, i_3_fu_487_p2, "i_3_fu_487_p2");
    sc_trace(mVcdFile, i_3_reg_761, "i_3_reg_761");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, tmp_1_cast_fu_505_p1, "tmp_1_cast_fu_505_p1");
    sc_trace(mVcdFile, tmp_1_cast_reg_766, "tmp_1_cast_reg_766");
    sc_trace(mVcdFile, exitcond2_fu_481_p2, "exitcond2_fu_481_p2");
    sc_trace(mVcdFile, tmp_2_cast_cast_fu_517_p1, "tmp_2_cast_cast_fu_517_p1");
    sc_trace(mVcdFile, tmp_2_cast_cast_reg_771, "tmp_2_cast_cast_reg_771");
    sc_trace(mVcdFile, bram_addr_6_reg_776, "bram_addr_6_reg_776");
    sc_trace(mVcdFile, j_3_fu_550_p2, "j_3_fu_550_p2");
    sc_trace(mVcdFile, j_3_reg_784, "j_3_reg_784");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, tmp_6_cast_cast_fu_568_p1, "tmp_6_cast_cast_fu_568_p1");
    sc_trace(mVcdFile, tmp_6_cast_cast_reg_789, "tmp_6_cast_cast_reg_789");
    sc_trace(mVcdFile, exitcond1_fu_544_p2, "exitcond1_fu_544_p2");
    sc_trace(mVcdFile, k_3_fu_578_p2, "k_3_fu_578_p2");
    sc_trace(mVcdFile, k_3_reg_797, "k_3_reg_797");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, exitcond_fu_572_p2, "exitcond_fu_572_p2");
    sc_trace(mVcdFile, sum4_fu_610_p2, "sum4_fu_610_p2");
    sc_trace(mVcdFile, sum4_reg_807, "sum4_reg_807");
    sc_trace(mVcdFile, tmp_s_fu_619_p2, "tmp_s_fu_619_p2");
    sc_trace(mVcdFile, tmp_s_reg_812, "tmp_s_reg_812");
    sc_trace(mVcdFile, sum8_fu_644_p2, "sum8_fu_644_p2");
    sc_trace(mVcdFile, sum8_reg_821, "sum8_reg_821");
    sc_trace(mVcdFile, sum_3_fu_661_p2, "sum_3_fu_661_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state24, "ap_CS_fsm_state24");
    sc_trace(mVcdFile, i_reg_194, "i_reg_194");
    sc_trace(mVcdFile, j_reg_205, "j_reg_205");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, k_reg_217, "k_reg_217");
    sc_trace(mVcdFile, sum_reg_228, "sum_reg_228");
    sc_trace(mVcdFile, i_1_reg_240, "i_1_reg_240");
    sc_trace(mVcdFile, j_1_reg_251, "j_1_reg_251");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, k_1_reg_263, "k_1_reg_263");
    sc_trace(mVcdFile, sum_1_reg_274, "sum_1_reg_274");
    sc_trace(mVcdFile, sum5_cast_fu_352_p1, "sum5_cast_fu_352_p1");
    sc_trace(mVcdFile, sum1_cast_fu_406_p1, "sum1_cast_fu_406_p1");
    sc_trace(mVcdFile, tmp_11_cast_fu_440_p1, "tmp_11_cast_fu_440_p1");
    sc_trace(mVcdFile, sum3_cast_fu_458_p1, "sum3_cast_fu_458_p1");
    sc_trace(mVcdFile, sum7_cast_fu_477_p1, "sum7_cast_fu_477_p1");
    sc_trace(mVcdFile, sum6_cast_fu_539_p1, "sum6_cast_fu_539_p1");
    sc_trace(mVcdFile, sum9_cast_fu_597_p1, "sum9_cast_fu_597_p1");
    sc_trace(mVcdFile, tmp_19_cast_fu_631_p1, "tmp_19_cast_fu_631_p1");
    sc_trace(mVcdFile, sum4_cast_fu_652_p1, "sum4_cast_fu_652_p1");
    sc_trace(mVcdFile, sum8_cast_fu_675_p1, "sum8_cast_fu_675_p1");
    sc_trace(mVcdFile, bram_Addr_A_orig, "bram_Addr_A_orig");
    sc_trace(mVcdFile, sigmoid_lut_load_cas_fu_472_p1, "sigmoid_lut_load_cas_fu_472_p1");
    sc_trace(mVcdFile, sigmoid_lut_load_1_c_fu_667_p1, "sigmoid_lut_load_1_c_fu_667_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, grp_fu_294_p2, "grp_fu_294_p2");
    sc_trace(mVcdFile, tmp_8_fu_322_p1, "tmp_8_fu_322_p1");
    sc_trace(mVcdFile, tmp_11_fu_338_p2, "tmp_11_fu_338_p2");
    sc_trace(mVcdFile, sum2_fu_344_p3, "sum2_fu_344_p3");
    sc_trace(mVcdFile, tmp_16_fu_369_p1, "tmp_16_fu_369_p1");
    sc_trace(mVcdFile, tmp_4_fu_373_p3, "tmp_4_fu_373_p3");
    sc_trace(mVcdFile, k_cast1_fu_385_p1, "k_cast1_fu_385_p1");
    sc_trace(mVcdFile, sum1_fu_401_p2, "sum1_fu_401_p2");
    sc_trace(mVcdFile, tmp1_fu_411_p3, "tmp1_fu_411_p3");
    sc_trace(mVcdFile, tmp_18_fu_424_p1, "tmp_18_fu_424_p1");
    sc_trace(mVcdFile, tmp_9_fu_434_p2, "tmp_9_fu_434_p2");
    sc_trace(mVcdFile, tmp2_fu_445_p3, "tmp2_fu_445_p3");
    sc_trace(mVcdFile, grp_fu_300_p4, "grp_fu_300_p4");
    sc_trace(mVcdFile, tmp_5_cast_fu_462_p1, "tmp_5_cast_fu_462_p1");
    sc_trace(mVcdFile, tmp_14_fu_493_p1, "tmp_14_fu_493_p1");
    sc_trace(mVcdFile, tmp_1_fu_497_p3, "tmp_1_fu_497_p3");
    sc_trace(mVcdFile, tmp_2_fu_509_p3, "tmp_2_fu_509_p3");
    sc_trace(mVcdFile, tmp_15_fu_521_p2, "tmp_15_fu_521_p2");
    sc_trace(mVcdFile, sum5_fu_527_p3, "sum5_fu_527_p3");
    sc_trace(mVcdFile, sum6_cast1_fu_535_p1, "sum6_cast1_fu_535_p1");
    sc_trace(mVcdFile, tmp_17_fu_556_p1, "tmp_17_fu_556_p1");
    sc_trace(mVcdFile, tmp_6_fu_560_p3, "tmp_6_fu_560_p3");
    sc_trace(mVcdFile, tmp3_fu_584_p3, "tmp3_fu_584_p3");
    sc_trace(mVcdFile, sum9_fu_592_p2, "sum9_fu_592_p2");
    sc_trace(mVcdFile, tmp4_fu_602_p3, "tmp4_fu_602_p3");
    sc_trace(mVcdFile, tmp_19_fu_615_p1, "tmp_19_fu_615_p1");
    sc_trace(mVcdFile, tmp_13_fu_625_p2, "tmp_13_fu_625_p2");
    sc_trace(mVcdFile, tmp5_fu_636_p3, "tmp5_fu_636_p3");
    sc_trace(mVcdFile, sum4_cast1_fu_649_p1, "sum4_cast1_fu_649_p1");
    sc_trace(mVcdFile, tmp_18_cast_fu_657_p1, "tmp_18_cast_fu_657_p1");
    sc_trace(mVcdFile, sum8_cast1_fu_672_p1, "sum8_cast1_fu_672_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("predictor.hdltvin.dat");
    mHdltvoutHandle.open("predictor.hdltvout.dat");
}

predictor::~predictor() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete sigmoid_lut_U;
    delete predictor_BUS_CTRL_s_axi_U;
    delete predictor_mul_32scud_U0;
}

void predictor::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void predictor::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         !esl_seteq<1,1,1>(exitcond5_fu_310_p2.read(), ap_const_lv1_0))) {
        i_1_reg_240 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_544_p2.read()))) {
        i_1_reg_240 = i_3_reg_761.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_357_p2.read()))) {
        i_reg_194 = i_2_reg_683.read();
    } else if ((esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        i_reg_194 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_481_p2.read()))) {
        j_1_reg_251 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        j_1_reg_251 = j_3_reg_784.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(exitcond5_fu_310_p2.read(), ap_const_lv1_0))) {
        j_reg_205 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        j_reg_205 = j_2_reg_706.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_544_p2.read()))) {
        k_1_reg_263 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        k_1_reg_263 = k_3_reg_797.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_357_p2.read()))) {
        k_reg_217 = ap_const_lv5_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        k_reg_217 = k_2_reg_719.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_544_p2.read()))) {
        sum_1_reg_274 = ap_const_lv28_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state24.read()))) {
        sum_1_reg_274 = sum_3_fu_661_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_357_p2.read()))) {
        sum_reg_228 = ap_const_lv28_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state12.read()))) {
        sum_reg_228 = sum_2_fu_466_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(exitcond5_fu_310_p2.read(), ap_const_lv1_0))) {
        bram_addr_4_reg_698 =  (sc_lv<11>) (sum5_cast_fu_352_p1.read());
        tmp_cast_reg_693 = tmp_cast_fu_334_p1.read();
        tmp_reg_688 = tmp_fu_326_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_481_p2.read()))) {
        bram_addr_6_reg_776 =  (sc_lv<11>) (sum6_cast_fu_539_p1.read());
        tmp_1_cast_reg_766 = tmp_1_cast_fu_505_p1.read();
        tmp_2_cast_cast_reg_771 = tmp_2_cast_cast_fu_517_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state2.read()))) {
        i_2_reg_683 = i_2_fu_316_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()))) {
        i_3_reg_761 = i_3_fu_487_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()))) {
        j_2_reg_706 = j_2_fu_363_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()))) {
        j_3_reg_784 = j_3_fu_550_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        k_2_reg_719 = k_2_fu_395_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        k_3_reg_797 = k_3_fu_578_p2.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())))) {
        reg_286 = bram_Dout_A.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state6.read())) || (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state18.read())))) {
        reg_290 = bram_Dout_A.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()))) {
        sum3_reg_729 = sum3_fu_419_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()))) {
        sum4_reg_807 = sum4_fu_610_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_428_p2.read()))) {
        sum7_reg_743 = sum7_fu_453_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_619_p2.read()))) {
        sum8_reg_821 = sum8_fu_644_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_357_p2.read()))) {
        tmp_4_cast_reg_711 = tmp_4_cast_fu_381_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state15.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_544_p2.read()))) {
        tmp_6_cast_cast_reg_789 = tmp_6_cast_cast_fu_568_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()))) {
        tmp_7_reg_734 = tmp_7_fu_428_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()))) {
        tmp_s_reg_812 = tmp_s_fu_619_p2.read();
    }
}

void predictor::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read().range(0, 0);
}

void predictor::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read().range(11, 11);
}

void predictor::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read().range(12, 12);
}

void predictor::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read().range(13, 13);
}

void predictor::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read().range(14, 14);
}

void predictor::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read().range(15, 15);
}

void predictor::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read().range(16, 16);
}

void predictor::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read().range(17, 17);
}

void predictor::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read().range(18, 18);
}

void predictor::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read().range(1, 1);
}

void predictor::thread_ap_CS_fsm_state24() {
    ap_CS_fsm_state24 = ap_CS_fsm.read().range(23, 23);
}

void predictor::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read().range(24, 24);
}

void predictor::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read().range(2, 2);
}

void predictor::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read().range(3, 3);
}

void predictor::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read().range(4, 4);
}

void predictor::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read().range(5, 5);
}

void predictor::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read().range(6, 6);
}

void predictor::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_481_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void predictor::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_CS_fsm_state1.read(), ap_const_lv1_1))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void predictor::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state14.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_481_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void predictor::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void predictor::thread_bram_Addr_A() {
    bram_Addr_A = (!ap_const_lv32_2.is_01())? sc_lv<32>(): bram_Addr_A_orig.read() << (unsigned short)ap_const_lv32_2.to_uint();
}

void predictor::thread_bram_Addr_A_orig() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        bram_Addr_A_orig = sum8_cast_fu_675_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read()))) {
        bram_Addr_A_orig = sum4_cast_fu_652_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_619_p2.read()))) {
        bram_Addr_A_orig =  (sc_lv<32>) (bram_addr_6_reg_776.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()))) {
        bram_Addr_A_orig = sum9_cast_fu_597_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        bram_Addr_A_orig = sum7_cast_fu_477_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read()))) {
        bram_Addr_A_orig = sum3_cast_fu_458_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_428_p2.read()))) {
        bram_Addr_A_orig =  (sc_lv<32>) (bram_addr_4_reg_698.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()))) {
        bram_Addr_A_orig = sum1_cast_fu_406_p1.read();
    } else {
        bram_Addr_A_orig = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void predictor::thread_bram_Clk_A() {
    bram_Clk_A = ap_clk.read()? SC_LOGIC_1 : SC_LOGIC_0;
}

void predictor::thread_bram_Din_A() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()))) {
        bram_Din_A = sigmoid_lut_load_1_c_fu_667_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_619_p2.read()))) {
        bram_Din_A = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()))) {
        bram_Din_A = sigmoid_lut_load_cas_fu_472_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()) && 
                !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_428_p2.read()))) {
        bram_Din_A = ap_const_lv32_100;
    } else {
        bram_Din_A = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void predictor::thread_bram_EN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state5.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state17.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_428_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_619_p2.read())))) {
        bram_EN_A = ap_const_logic_1;
    } else {
        bram_EN_A = ap_const_logic_0;
    }
}

void predictor::thread_bram_Rst_A() {
    bram_Rst_A =  (sc_logic) (~ap_rst_n.read());
}

void predictor::thread_bram_WEN_A() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state13.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_reg_734.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state25.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_reg_812.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_7_fu_428_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_s_fu_619_p2.read())))) {
        bram_WEN_A = ap_const_lv4_F;
    } else {
        bram_WEN_A = ap_const_lv4_0;
    }
}

void predictor::thread_exitcond1_fu_544_p2() {
    exitcond1_fu_544_p2 = (!j_1_reg_251.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_251.read() == ap_const_lv3_4);
}

void predictor::thread_exitcond2_fu_481_p2() {
    exitcond2_fu_481_p2 = (!i_1_reg_240.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_1_reg_240.read() == ap_const_lv6_20);
}

void predictor::thread_exitcond3_fu_389_p2() {
    exitcond3_fu_389_p2 = (!k_reg_217.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(k_reg_217.read() == ap_const_lv5_10);
}

void predictor::thread_exitcond4_fu_357_p2() {
    exitcond4_fu_357_p2 = (!j_reg_205.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_205.read() == ap_const_lv5_10);
}

void predictor::thread_exitcond5_fu_310_p2() {
    exitcond5_fu_310_p2 = (!i_reg_194.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(i_reg_194.read() == ap_const_lv6_20);
}

void predictor::thread_exitcond_fu_572_p2() {
    exitcond_fu_572_p2 = (!k_1_reg_263.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(k_1_reg_263.read() == ap_const_lv5_10);
}

void predictor::thread_grp_fu_300_p4() {
    grp_fu_300_p4 = grp_fu_294_p2.read().range(31, 8);
}

void predictor::thread_i_2_fu_316_p2() {
    i_2_fu_316_p2 = (!i_reg_194.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_reg_194.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void predictor::thread_i_3_fu_487_p2() {
    i_3_fu_487_p2 = (!i_1_reg_240.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(i_1_reg_240.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void predictor::thread_j_2_fu_363_p2() {
    j_2_fu_363_p2 = (!j_reg_205.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(j_reg_205.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void predictor::thread_j_3_fu_550_p2() {
    j_3_fu_550_p2 = (!j_1_reg_251.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_1_reg_251.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void predictor::thread_k_2_fu_395_p2() {
    k_2_fu_395_p2 = (!k_reg_217.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_reg_217.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void predictor::thread_k_3_fu_578_p2() {
    k_3_fu_578_p2 = (!k_1_reg_263.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(k_1_reg_263.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void predictor::thread_k_cast1_fu_385_p1() {
    k_cast1_fu_385_p1 = esl_zext<9,5>(k_reg_217.read());
}

void predictor::thread_sigmoid_lut_address0() {
    if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read()))) {
        sigmoid_lut_address0 =  (sc_lv<13>) (tmp_19_cast_fu_631_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read()))) {
        sigmoid_lut_address0 =  (sc_lv<13>) (tmp_11_cast_fu_440_p1.read());
    } else {
        sigmoid_lut_address0 =  (sc_lv<13>) ("XXXXXXXXXXXXX");
    }
}

void predictor::thread_sigmoid_lut_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state4.read())) || 
         (esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm_state16.read())))) {
        sigmoid_lut_ce0 = ap_const_logic_1;
    } else {
        sigmoid_lut_ce0 = ap_const_logic_0;
    }
}

void predictor::thread_sigmoid_lut_load_1_c_fu_667_p1() {
    sigmoid_lut_load_1_c_fu_667_p1 = esl_zext<32,8>(sigmoid_lut_q0.read());
}

void predictor::thread_sigmoid_lut_load_cas_fu_472_p1() {
    sigmoid_lut_load_cas_fu_472_p1 = esl_zext<32,8>(sigmoid_lut_q0.read());
}

void predictor::thread_sum1_cast_fu_406_p1() {
    sum1_cast_fu_406_p1 = esl_zext<32,9>(sum1_fu_401_p2.read());
}

void predictor::thread_sum1_fu_401_p2() {
    sum1_fu_401_p2 = (!tmp_reg_688.read().is_01() || !k_cast1_fu_385_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp_reg_688.read()) + sc_biguint<9>(k_cast1_fu_385_p1.read()));
}

void predictor::thread_sum2_fu_344_p3() {
    sum2_fu_344_p3 = esl_concat<2,9>(ap_const_lv2_2, tmp_11_fu_338_p2.read());
}

void predictor::thread_sum3_cast_fu_458_p1() {
    sum3_cast_fu_458_p1 = esl_zext<32,10>(sum3_reg_729.read());
}

void predictor::thread_sum3_fu_419_p2() {
    sum3_fu_419_p2 = (!tmp1_fu_411_p3.read().is_01() || !tmp_4_cast_reg_711.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp1_fu_411_p3.read()) + sc_biguint<10>(tmp_4_cast_reg_711.read()));
}

void predictor::thread_sum4_cast1_fu_649_p1() {
    sum4_cast1_fu_649_p1 = esl_sext<10,9>(sum4_reg_807.read());
}

void predictor::thread_sum4_cast_fu_652_p1() {
    sum4_cast_fu_652_p1 = esl_zext<32,10>(sum4_cast1_fu_649_p1.read());
}

void predictor::thread_sum4_fu_610_p2() {
    sum4_fu_610_p2 = (!tmp4_fu_602_p3.read().is_01() || !tmp_6_cast_cast_reg_789.read().is_01())? sc_lv<9>(): (sc_biguint<9>(tmp4_fu_602_p3.read()) + sc_biguint<9>(tmp_6_cast_cast_reg_789.read()));
}

void predictor::thread_sum5_cast_fu_352_p1() {
    sum5_cast_fu_352_p1 = esl_zext<32,11>(sum2_fu_344_p3.read());
}

void predictor::thread_sum5_fu_527_p3() {
    sum5_fu_527_p3 = esl_concat<3,7>(ap_const_lv3_4, tmp_15_fu_521_p2.read());
}

void predictor::thread_sum6_cast1_fu_535_p1() {
    sum6_cast1_fu_535_p1 = esl_sext<11,10>(sum5_fu_527_p3.read());
}

void predictor::thread_sum6_cast_fu_539_p1() {
    sum6_cast_fu_539_p1 = esl_zext<32,11>(sum6_cast1_fu_535_p1.read());
}

void predictor::thread_sum7_cast_fu_477_p1() {
    sum7_cast_fu_477_p1 = esl_zext<32,11>(sum7_reg_743.read());
}

void predictor::thread_sum7_fu_453_p2() {
    sum7_fu_453_p2 = (!tmp2_fu_445_p3.read().is_01() || !tmp_cast_reg_693.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp2_fu_445_p3.read()) + sc_biguint<11>(tmp_cast_reg_693.read()));
}

void predictor::thread_sum8_cast1_fu_672_p1() {
    sum8_cast1_fu_672_p1 = esl_sext<11,10>(sum8_reg_821.read());
}

void predictor::thread_sum8_cast_fu_675_p1() {
    sum8_cast_fu_675_p1 = esl_zext<32,11>(sum8_cast1_fu_672_p1.read());
}

void predictor::thread_sum8_fu_644_p2() {
    sum8_fu_644_p2 = (!tmp5_fu_636_p3.read().is_01() || !tmp_2_cast_cast_reg_771.read().is_01())? sc_lv<10>(): (sc_biguint<10>(tmp5_fu_636_p3.read()) + sc_biguint<10>(tmp_2_cast_cast_reg_771.read()));
}

void predictor::thread_sum9_cast_fu_597_p1() {
    sum9_cast_fu_597_p1 = esl_zext<32,11>(sum9_fu_592_p2.read());
}

void predictor::thread_sum9_fu_592_p2() {
    sum9_fu_592_p2 = (!tmp3_fu_584_p3.read().is_01() || !tmp_1_cast_reg_766.read().is_01())? sc_lv<11>(): (sc_biguint<11>(tmp3_fu_584_p3.read()) + sc_biguint<11>(tmp_1_cast_reg_766.read()));
}

void predictor::thread_sum_2_fu_466_p2() {
    sum_2_fu_466_p2 = (!tmp_5_cast_fu_462_p1.read().is_01() || !sum_reg_228.read().is_01())? sc_lv<28>(): (sc_bigint<28>(tmp_5_cast_fu_462_p1.read()) + sc_biguint<28>(sum_reg_228.read()));
}

void predictor::thread_sum_3_fu_661_p2() {
    sum_3_fu_661_p2 = (!tmp_18_cast_fu_657_p1.read().is_01() || !sum_1_reg_274.read().is_01())? sc_lv<28>(): (sc_bigint<28>(tmp_18_cast_fu_657_p1.read()) + sc_biguint<28>(sum_1_reg_274.read()));
}

void predictor::thread_tmp1_fu_411_p3() {
    tmp1_fu_411_p3 = esl_concat<5,5>(ap_const_lv5_10, k_reg_217.read());
}

void predictor::thread_tmp2_fu_445_p3() {
    tmp2_fu_445_p3 = esl_concat<6,5>(ap_const_lv6_20, j_reg_205.read());
}

void predictor::thread_tmp3_fu_584_p3() {
    tmp3_fu_584_p3 = esl_concat<6,5>(ap_const_lv6_20, k_1_reg_263.read());
}

void predictor::thread_tmp4_fu_602_p3() {
    tmp4_fu_602_p3 = esl_concat<4,5>(ap_const_lv4_8, k_1_reg_263.read());
}

void predictor::thread_tmp5_fu_636_p3() {
    tmp5_fu_636_p3 = esl_concat<7,3>(ap_const_lv7_40, j_1_reg_251.read());
}

void predictor::thread_tmp_11_cast_fu_440_p1() {
    tmp_11_cast_fu_440_p1 = esl_zext<32,15>(tmp_9_fu_434_p2.read());
}

void predictor::thread_tmp_11_fu_338_p2() {
    tmp_11_fu_338_p2 = (tmp_fu_326_p3.read() | ap_const_lv9_F);
}

void predictor::thread_tmp_13_fu_625_p2() {
    tmp_13_fu_625_p2 = (!tmp_19_fu_615_p1.read().is_01() || !ap_const_lv15_1000.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_19_fu_615_p1.read()) + sc_biguint<15>(ap_const_lv15_1000));
}

void predictor::thread_tmp_14_fu_493_p1() {
    tmp_14_fu_493_p1 = i_1_reg_240.read().range(5-1, 0);
}

void predictor::thread_tmp_15_fu_521_p2() {
    tmp_15_fu_521_p2 = (tmp_2_fu_509_p3.read() | ap_const_lv7_3);
}

void predictor::thread_tmp_16_fu_369_p1() {
    tmp_16_fu_369_p1 = j_reg_205.read().range(4-1, 0);
}

void predictor::thread_tmp_17_fu_556_p1() {
    tmp_17_fu_556_p1 = j_1_reg_251.read().range(2-1, 0);
}

void predictor::thread_tmp_18_cast_fu_657_p1() {
    tmp_18_cast_fu_657_p1 = esl_sext<28,24>(grp_fu_300_p4.read());
}

void predictor::thread_tmp_18_fu_424_p1() {
    tmp_18_fu_424_p1 = sum_reg_228.read().range(15-1, 0);
}

void predictor::thread_tmp_19_cast_fu_631_p1() {
    tmp_19_cast_fu_631_p1 = esl_zext<32,15>(tmp_13_fu_625_p2.read());
}

void predictor::thread_tmp_19_fu_615_p1() {
    tmp_19_fu_615_p1 = sum_1_reg_274.read().range(15-1, 0);
}

void predictor::thread_tmp_1_cast_fu_505_p1() {
    tmp_1_cast_fu_505_p1 = esl_zext<11,9>(tmp_1_fu_497_p3.read());
}

void predictor::thread_tmp_1_fu_497_p3() {
    tmp_1_fu_497_p3 = esl_concat<5,4>(tmp_14_fu_493_p1.read(), ap_const_lv4_0);
}

void predictor::thread_tmp_2_cast_cast_fu_517_p1() {
    tmp_2_cast_cast_fu_517_p1 = esl_zext<10,7>(tmp_2_fu_509_p3.read());
}

void predictor::thread_tmp_2_fu_509_p3() {
    tmp_2_fu_509_p3 = esl_concat<5,2>(tmp_14_fu_493_p1.read(), ap_const_lv2_0);
}

void predictor::thread_tmp_4_cast_fu_381_p1() {
    tmp_4_cast_fu_381_p1 = esl_zext<10,8>(tmp_4_fu_373_p3.read());
}

void predictor::thread_tmp_4_fu_373_p3() {
    tmp_4_fu_373_p3 = esl_concat<4,4>(tmp_16_fu_369_p1.read(), ap_const_lv4_0);
}

void predictor::thread_tmp_5_cast_fu_462_p1() {
    tmp_5_cast_fu_462_p1 = esl_sext<28,24>(grp_fu_300_p4.read());
}

void predictor::thread_tmp_6_cast_cast_fu_568_p1() {
    tmp_6_cast_cast_fu_568_p1 = esl_zext<9,6>(tmp_6_fu_560_p3.read());
}

void predictor::thread_tmp_6_fu_560_p3() {
    tmp_6_fu_560_p3 = esl_concat<2,4>(tmp_17_fu_556_p1.read(), ap_const_lv4_0);
}

void predictor::thread_tmp_7_fu_428_p2() {
    tmp_7_fu_428_p2 = (!j_reg_205.read().is_01() || !ap_const_lv5_F.is_01())? sc_lv<1>(): sc_lv<1>(j_reg_205.read() == ap_const_lv5_F);
}

void predictor::thread_tmp_8_fu_322_p1() {
    tmp_8_fu_322_p1 = i_reg_194.read().range(5-1, 0);
}

void predictor::thread_tmp_9_fu_434_p2() {
    tmp_9_fu_434_p2 = (!tmp_18_fu_424_p1.read().is_01() || !ap_const_lv15_1000.is_01())? sc_lv<15>(): (sc_biguint<15>(tmp_18_fu_424_p1.read()) + sc_biguint<15>(ap_const_lv15_1000));
}

void predictor::thread_tmp_cast_fu_334_p1() {
    tmp_cast_fu_334_p1 = esl_zext<11,9>(tmp_fu_326_p3.read());
}

void predictor::thread_tmp_fu_326_p3() {
    tmp_fu_326_p3 = esl_concat<5,4>(tmp_8_fu_322_p1.read(), ap_const_lv4_0);
}

void predictor::thread_tmp_s_fu_619_p2() {
    tmp_s_fu_619_p2 = (!j_1_reg_251.read().is_01() || !ap_const_lv3_3.is_01())? sc_lv<1>(): sc_lv<1>(j_1_reg_251.read() == ap_const_lv3_3);
}

void predictor::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if (!esl_seteq<1,1,1>(exitcond5_fu_310_p2.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond4_fu_357_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_389_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 8192 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_481_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_544_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state16;
            }
            break;
        case 32768 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_572_p2.read())) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_state17;
            }
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<25>) ("XXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void predictor::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"bram_Addr_A\" :  \"" << bram_Addr_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bram_EN_A\" :  \"" << bram_EN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bram_WEN_A\" :  \"" << bram_WEN_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bram_Din_A\" :  \"" << bram_Din_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"bram_Dout_A\" :  \"" << bram_Dout_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bram_Clk_A\" :  \"" << bram_Clk_A.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"bram_Rst_A\" :  \"" << bram_Rst_A.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_AWVALID\" :  \"" << s_axi_BUS_CTRL_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_AWREADY\" :  \"" << s_axi_BUS_CTRL_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_AWADDR\" :  \"" << s_axi_BUS_CTRL_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_WVALID\" :  \"" << s_axi_BUS_CTRL_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_WREADY\" :  \"" << s_axi_BUS_CTRL_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_WDATA\" :  \"" << s_axi_BUS_CTRL_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_WSTRB\" :  \"" << s_axi_BUS_CTRL_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_ARVALID\" :  \"" << s_axi_BUS_CTRL_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_ARREADY\" :  \"" << s_axi_BUS_CTRL_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_ARADDR\" :  \"" << s_axi_BUS_CTRL_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_RVALID\" :  \"" << s_axi_BUS_CTRL_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_RREADY\" :  \"" << s_axi_BUS_CTRL_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_RDATA\" :  \"" << s_axi_BUS_CTRL_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_RRESP\" :  \"" << s_axi_BUS_CTRL_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_BVALID\" :  \"" << s_axi_BUS_CTRL_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_BUS_CTRL_BREADY\" :  \"" << s_axi_BUS_CTRL_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_BUS_CTRL_BRESP\" :  \"" << s_axi_BUS_CTRL_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

